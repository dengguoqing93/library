<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.library.dao.dgq.StudentInfoMapper">
	<resultMap id="BaseResultMap" type="com.library.pojo.dgq.StudentInfo" >
		<id column="STUDENTNO" jdbcType="DECIMAL" property="studentno" />
		<result column="PWD" jdbcType="VARCHAR" property="pwd" />
		<result column="STUDENTSEX" jdbcType="DECIMAL" property="studentsex" />
		<result column="GRADE" jdbcType="DECIMAL" property="grade" />
		<result column="CLASSES" jdbcType="DECIMAL" property="classes" />
		<result column="STUDENTPHONE" jdbcType="DECIMAL" property="studentphone" />
		<result column="BORROWQUANTITIES" jdbcType="DECIMAL" property="borrowquantities" />
		<result column="BORROWEDQUANTITIES" jdbcType="DECIMAL" property="borrowedquantities" />
		<result column="BORROWPRIVILEGE" jdbcType="DECIMAL" property="borrowprivilege" />
		<result column="STUDENTNAME" jdbcType="VARCHAR" property="studentname" />
		<result column="COMM" jdbcType="VARCHAR" property="comm" />
		<result column="DEF01" jdbcType="VARCHAR" property="def01" />
		<result column="DEF02" jdbcType="VARCHAR" property="def02" />
		<result column="DEF03" jdbcType="VARCHAR" property="def03" />
		<result column="DEF04" jdbcType="VARCHAR" property="def04" />
		<result column="DEF05" jdbcType="VARCHAR" property="def05" />
		<association property="department" javaType="DepartmentInfo"
			column="departmentid" select="selectDepartment">
		</association>
		<association property="profession" javaType="ProfessionInfo"
			column="professionid" select="selectProfession"></association>
	</resultMap>
	<sql id="Base_Column_List">
		STUDENTNO, PWD, STUDENTSEX, GRADE, DEPARTMENTID, CLASSES,
		STUDENTPHONE,
		BORROWQUANTITIES,
		BORROWEDQUANTITIES, BORROWPRIVILEGE,
		COMM, DEF01, DEF02, DEF03, DEF04, DEF05,
		PROFESSIONID,
		STUDENTNAME
	</sql>



	<!-- 查询院系信息 -->
	<select id="selectDepartment" resultType="DepartmentInfo"
		parameterType="long">
		select * from DEPARTMENTinfo where departmentid =
		#{departmentid}
	</select>
	<!-- 查询专业信息 -->
	<select id="selectProfession" resultType="ProfessionInfo"
		parameterType="long">
		select * from PROFESSIONINFO where professionid =
		#{professionid}
	</select>
	<!-- 通过学生编号查询学生信息 -->
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from DGQ.STUDENTINFO
		where STUDENTNO = #{studentno,jdbcType=DECIMAL}
	</select>
	<!-- 插入学生信息 -->
	<insert id="insertStudentInfo" useGeneratedKeys="false"
		keyColumn="departmentid">
		INSERT INTO studentinfo
		(studentno,studentname,pwd,studentsex,grade,departmentid,professionid,classes,studentphone)
		values(#{studentno},#{studentname},#{pwd},#{studentsex},#{grade},
		(select departmentid from departmentinfo where departmentname =
		#{departmentname}) ,
		(select professionid from professioninfo where
		professionname = #{professionname}) ,
		#{classes},#{studentphone})
	</insert>
	<!-- 查询学生信息，拼接自己写的 -->
	<select id="selectByStudentno" resultType="Student">
		select s.studentno
		studentno,s.studentname studentname,d.departmentname departmentname,
		p.professionname professionname,s.BORROWEDQUANTITIES
		borrowedquantities
		from studentinfo s inner join departmentinfo d on s.departmentid =
		d.departmentid
		inner join professioninfo p on s.professionid = p.professionid
		where studentno = #{studentno}
	</select>
	<!-- 根据学生编号查询借阅信息 -->
	<select id="selectBorrowingByStudentno" resultType="Borrowing">
		select bo.bookno bookno,bo.bookname bookname,bo.author author,
		to_char(br.borroweddate,'yyyy-mm-dd')
		borroweddate,to_char(br.shouldreturndate,'yyyy-mm-dd')
		shouldreturndate
		from borrowinginfo br inner join bookinfo bo on bo.bookid = br.bookid
		where studentno = #{studentno} and br.ACTUALRETURNDATE is null
	</select>
	<!-- 更新学生的借阅数量信息及借阅权限信息 -->
	<update id="updateStudentBorringInfo">
		update studentinfo set 
		borrowquantities = #{borrowquantities},
		borrowedquantities = #{borrowedquantities},
		borrowprivilege = #{borrowprivilege}
		where studentno = #{studentno}
	</update>
	
</mapper>